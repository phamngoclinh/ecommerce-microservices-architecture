version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: api-gateway
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
      - order-service
      - inventory-service
      - payment-service
      - notification-service
    networks:
      - backend

  order-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: order-service
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - backend

  inventory-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: inventory-service
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - '3002:3000'
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - backend

  payment-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: payment-service
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - '3003:3000'
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - backend

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_NAME: notification-service
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - '3004:3000'
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: monorepo_db
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
